apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: r-model-runner
  namespace: shinyproxy
spec:
  pollingInterval: 30           # seconds between queue checks
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  maxReplicaCount: 3            # limit concurrent model runs
  rolloutStrategy: default
  jobTargetRef:
    parallelism: 1
    completions: 1
    backoffLimit: 0  # no retries
    template:
      metadata:
        labels:
          app: r-model-runner
      spec:
        restartPolicy: Never
        # Tolerations / node selection (adjust to your large node pool)
        tolerations:
          - key: "sku"
            operator: "Equal"
            value: "model"
            effect: "NoSchedule"
        containers:
          - name: runner
            image: ${RUNNER_IMAGE}
            imagePullPolicy: Always
            env:
              - name: QUEUE_NAME
                valueFrom:
                  secretKeyRef:
                    name: r-model-queue
                    key: queueName
              - name: STORAGE_QUEUE_CONNECTION_STRING
                valueFrom:
                  secretKeyRef:
                    name: r-model-queue
                    key: connectionString
              - name: STORAGE_ACCOUNT_NAME
                valueFrom:
                  secretKeyRef:
                    name: r-model-queue
                    key: accountName
            resources:
              requests:
                cpu: "44"
                memory: "300Gi"
              limits:
                cpu: "800"
                memory: "10000Gi"
            volumeMounts:
              - name: app-share
                mountPath: /srv/rdmtool/saved_regs
                subPath: saved_regs
              - name: app-share
                mountPath: /srv/rdmtool/output
                subPath: output
              - name: app-share
                mountPath: /srv/rdmtool/Data
                subPath: Data
                readOnly: true
            command: ["/bin/sh","-c","/app/consume_and_run.sh"]
        volumes:
          - name: app-share
            persistentVolumeClaim:
              claimName: app-share-pvc
  triggers:
    - type: azure-queue
      metadata:
        queueName: ${QUEUE_NAME}
        queueLength: "1"          # scale one job per message
        accountName: ${STORAGE_ACCOUNT_NAME}
      authenticationRef:
        name: r-model-queue-trigger-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: r-model-queue
  namespace: shinyproxy
stringData:
  queueName: ${QUEUE_NAME}
  connectionString: ${STORAGE_QUEUE_CONNECTION_STRING}
  accountName: ${STORAGE_ACCOUNT_NAME}
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: r-model-queue-trigger-auth
  namespace: shinyproxy
spec:
  secretTargetRef:
    - parameter: connection
      name: r-model-queue
      key: connectionString
