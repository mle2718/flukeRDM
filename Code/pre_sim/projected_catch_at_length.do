


 
* A) First generate 2024 catch-at-lengths. I do this by:
	* 1) Pull in simulated total catch by species and state
	* 2) pull in the fitted catch-at-length probabilities. These are generated by region (MA-NY, NJ, DE-NC) for fluke and bsb, and for the entire coast for scup	
	* 3) multiply these distributions by each state's total catch

* A1) 
* Simulated total catch by state and species 	
use "$iterative_input_data_cd\simulated_catch_totals.dta", clear 

collapse (sum)  tot_sf_cat_sim tot_bsb_cat_sim tot_scup_cat_sim, by(state draw)

reshape long tot_, i(draw state) j(species) string

split species, parse(_)
drop species species2 species3
rename species1 species
renam tot tot_catch 

order species state draw
format tot %12.0gc
sort draw species state

tempfile catch2024
save `catch2024', replace 

*A2) 
import delimited using "$iterative_input_data_cd/baseline_catch_at_length.csv", clear  
sort draw state species length

merge m:1 species state draw using `catch2024'
drop _merge

*A3) 
gen cal=tot*fitted
sort draw state species length

gen domain=state+"_"+species

tempfile cal
save `cal', replace 


* B) Compute population numbers-at-length in the calibration year (2024)
	* 1) Pull in pop dy.'s Jan 1. 2024 numbers-at-age for the three species. Fluke and scup are one stock, black sea bass split between North and South
	* 2) Randomly sample 110 draws from these distributions
	* 3) Duplicate these distributions by state such that they can be merged to the catch-at-length distributions by state


	
* B1) and B2) 
* Import baseline year population numbers-at-age data, randomly select NAA draws

import delimited using "$input_data_cd/length_data/J1_2024Summer_Flounder.csv", clear
gen species="sf"
gen region="all"
duplicates drop 
drop year
sample $ndraws, count
gen draw=_n
tempfile sf
save `sf', replace 

import delimited using "$input_data_cd/length_data/J1_2024Scup.csv", clear
gen species="scup"
gen region="all"
duplicates drop 
drop year
sample $ndraws, count
gen draw=_n
tempfile scup
save `scup', replace 

import delimited using "$input_data_cd/length_data/fit_NAA_NORTH_2024.csv", clear
gen species="bsb"
gen region="north"
duplicates drop 
sample $ndraws, count
replace draw=_n
forv i=0(1)7{
	local v = `i'+1
	rename v`v' a`i'
		
}

tempfile bsbN
save `bsbN', replace 

import delimited using "$input_data_cd/length_data/fit_NAA_SOUTH_2024.csv", clear
gen species="bsb"
gen region="south"
duplicates drop 
sample $ndraws, count
replace draw=_n

forv i=0(1)7{
	local v = `i'+1
	rename v`v' a`i'
		
}
egen rowtotal=rowtotal(a0-a7)
tempfile bsbS
save `bsbS', replace 

append using `bsbN'
append using `scup'
append using `sf'
order species region draw

reshape long a, i(species region draw) j(age) string
destring age, replace
rename a pop_naa

*B3) 
expand 4 if species=="bsb" & region=="north"
bysort draw species region age: gen n=_n 
gen  state="MA" if species=="bsb" & region=="north" & n==1
replace state="RI" if species=="bsb" & region=="north" & n==2
replace state="CT" if species=="bsb" & region=="north" & n==3
replace state="NY" if species=="bsb" & region=="north" & n==4
drop n

expand 5 if species=="bsb" & region=="south"
bysort draw species region age: gen n=_n 
replace  state="NJ" if species=="bsb" & region=="south" & n==1
replace state="DE" if species=="bsb" & region=="south" & n==2
replace state="VA" if species=="bsb" & region=="south" & n==3
replace state="MD" if species=="bsb" & region=="south" & n==4
replace state="NC" if species=="bsb" & region=="south" & n==5
drop n

expand 9 if species=="sf"
bysort draw species region age: gen n=_n 
replace  state="MA" if species=="sf" & n==1
replace state="RI" if species=="sf" & n==2
replace state="CT" if species=="sf" & n==3
replace state="NY" if species=="sf" & n==4
replace state="NC" if species=="sf" & n==5
replace  state="NJ" if species=="sf"& n==6
replace state="DE" if species=="sf" & n==7
replace state="VA" if species=="sf" & n==8
replace state="MD" if species=="sf" & n==9
drop n

expand 9 if species=="scup"
bysort draw species region age: gen n=_n 
replace  state="MA" if species=="scup" & n==1
replace state="RI" if species=="scup" & n==2
replace state="CT" if species=="scup" & n==3
replace state="NY" if species=="scup" & n==4
replace state="NC" if species=="scup" & n==5
replace  state="NJ" if species=="scup"& n==6
replace state="DE" if species=="scup" & n==7
replace state="VA" if species=="scup" & n==8
replace state="MD" if species=="scup" & n==9

tempfile pop_naa_calibration
save `pop_naa_calibration', replace 


*C) Create age-length keys from NEFSC trawl survey data
	*1) Pull in NEFSC trawl survey data
	*2) Smooth counts across age classes over the range of observed catch-at-lengths for a given state-species using a LOWESS bandwidth=0.3
	*3) Compute the proportion of fish of age a that are length l
	*4) Expand to the number of draws used in the simulation 
	*5) Merge the age-length keys to the population numbers-at-age, compute population numbers-at-length

*C1) 
import delimited using "$input_data_cd/length_data/NEFSC trawl survey data.csv", clear
tab stratum
gen str5 stratum2 = string(stratum, "%05.0f")
gen str2 stratum_group = substr(stratum2, 1, 2)   // first 2 characters
gen str3 stratum_number = substr(stratum2, 3, 3)   // last 3 characters


/*
Stratum group code: 
01 = Trawl, offshore north of Hatteras; 
02 = BIOM; 
03 = Trawl, inshore north of Hatteras; 
04 = Shrimp; 
05 = Scotian shelf; 
06 = Shellfish; 
07 = Trawl, inshore south of Hatteras; 
08 = Trawl, Offshore south of Hatteras; 
09 = MA DMF; 
99 = Offshore deepwater (outside the stratified area)
*/

keep if inlist(stratum_group, "01", "03", "09")

tostring cruise, gen(cruise2)
gen year=substr(cruise2, 1, 4)
destring year, replace

/*
svspp codes:
summer flounder =103
bsb =141
scup =143
*/

gen species="sf" if svspp==103 
replace species="bsb" if svspp==141 
replace species="scup" if svspp==143 

keep if $NEFSC_svy_yrs
replace age=7 if age>=7

collapse (sum) countage, by(species age length)
rename count naa

expand 9 
bysort species length age: gen n=_n 
gen state="MA" if n==1
replace state="MD" if n==2
replace state="RI" if n==3
replace state="CT" if n==4
replace state="NY" if n==5
replace state="NJ" if n==6
replace state="DE" if n==7
replace state="VA" if n==8
replace state="NC" if n==9
drop n

sort state species age length 
order state species age length 


*C2)  
gen domain=state+"_"+species
levelsof domain, local(domz)

tempfile base
save `base', replace

clear 
tempfile master
save `master', emptyok

foreach d of local domz{
	
	*local d="CT_bsb"
	u `cal', clear 
	su length if domain=="`d'" & fitted!=.
	local min=`r(min)'
	local max=`r(max)'
	
	clear 
	set obs 2
	gen length=`r(min)' if _n==1
	replace length =`r(max)' if _n==2
	tsset length
	tsfill, full
	expand 8
	bysort length: gen age=_n
	replace age=age-1

	tempfile range
	save `range', replace 
	
	u `base', clear 
	keep if domain=="`d'"
	merge 1:1 length age using `range', keep(2 3) nogen
	sort age length 
	
	tsset age length
	tsfill, full
	mvencode naa, mv(0) override 

	sort age length 
	replace domain="`d'" if domain==""
	

levelsof age, local(ages)
foreach a of local ages{
	
	*su length if age==`a' & count!=0
	*lowess count length if age==`a' & length>=`r(min)' & length<=`r(max)', adjust bwidth(.3) gen(s`a') nograph
	lowess naa length if age==`a' , adjust bwidth(.3) gen(s`a') nograph

	replace s`a'=0 if s`a'<=0
}
egen smoothed_naa=rowtotal(s0-s7)

append using `master'
save `master', replace
clear                            
}

use `master', clear

drop s0-s7
drop species state
split domain, parse(_)
rename domain1 state
rename domain2 species

/*
levelsof age if species=="sf" & region=="all", local(ages)
foreach a of local ages{
twoway(scatter naa length if age==`a' & species=="sf" & region=="all", connect(direct) lcol(red)   lwidth(medthick)  lpat(solid) msymbol(i) ) ///
			(scatter smoothed length if age==`a' & species=="sf" & region=="all", connect(direct) lcol(blue)  ///
			ytitle("proportion of fish that are age-a", size(small)) ytick(, angle(horizontal) labsize(small)) xtitle(length cms, size(small)) xlab(, labsize(small)) ///
			ylab(, labsize(small) angle(horizontal)) xtick(, labsize(small)) lwidth(medthick)  lpat(solid) msymbol(i)  name(dom`a', replace))
 local graphnames `graphnames' dom`a'
}

grc1leg `graphnames' 
*graph export "$figure_cd/cod_prop_length_at_age.png", as(png) replace
*/


*C3)  
egen sum_smooth=sum(smoothed_naa), by(age species state)	
gen prop_smoothed=smoothed/sum	

egen sum_raw=sum(naa), by(age species state)	
gen prop_raw=naa/sum_raw	
drop sum*		

*C4) 
expand $ndraws
bysort length age species state: gen draw=_n

tempfile age_length
save `age_length', replace

*C5)  
merge m:1 species state age draw using `pop_naa_calibration'
replace pop_naa=pop_naa*1000

sort draw species state age length   

gen nal=pop_naa*prop_smoothed

collapse (sum) nal, by(draw species state length)

order draw state species length nal
sort draw state species length nal

tempfile nal
save `nal', replace 


*D) Compute recreational selectivity 
	*1) Adjust the catch-at-length and population numbers-at-length data such that for a given length, 
	*    catch is not greater than the population number. I do this by essentially creating plus groups of lengths until NaL>CaL. 
    *     For these plus groups, I retain the original proportion of fish caught by length and will merge this back into the project CaL. 


*Merge back to catch-at-lengths
merge 1:1 species state draw length using `cal'

tostring draw, gen(draw2)
gen domain2=state+"_"+species+"_"+draw2
drop if length==.

mvencode nal cal, mv(0) override
gen tab=1 if cal>nal & cal!=0
egen sumtab=sum(tab), by(domain2)


gen length2=length 
levelsof domain2 if sumtab>0, local(domz)
foreach d of local domz{
	
	su length if domain2=="`d'" & nal!=0
	local max=`r(max)'
	local min=`r(min)'

	replace length2=`max' if length>`max' & domain2=="`d'" 
	replace length2=`min' if length<`min' & domain2=="`d'" 
	
}
sort draw state species length 
egen cal2=sum(cal), by(domain2 length2)
egen nal2=sum(nal), by(domain2 length2)
*drop tab sumtab

gen tab2=1 if cal2>nal2 & cal2!=0
egen sumtab2=sum(tab2), by(domain2)

gen length3 =length2
levelsof domain2 if sumtab2>0, local(domz)

preserve
keep if sumtab2==0
tempfile okay
save `okay', replace
restore 

drop if sumtab2==0

tempfile base 
save `base', replace

clear 
tempfile master
save `master', emptyok

foreach d of local domz{
	
	u `base', clear 
	keep if domain2=="`d'"
	*keep if domain2=="MA_bsb_31"

	gsort domain2 -length2
	bysort domain2: gen cum_nal = sum(nal2)
	bysort domain2: gen cum_cal = sum(cal2)
	su length3 if tab2==1
	gen tab3=1 if cum_nal>cum_cal & length3<=`r(min)'
	su length3 if tab3==1
	replace length3=`r(max)' if length3>=`r(max)'
	
	
	append using `master'
	save `master', replace
	clear        
}
 use `master', clear
 append using `okay'	 
 
egen cal3=sum(cal), by(domain2 length3)
egen nal3=sum(nal), by(domain2 length3)

gen tab4=1 if cal3>nal3 & cal3!=0
egen sumtab4=sum(tab4), by(domain2)

gen cal_proportion=cal/cal3

preserve
keep domain2 length length3 cal_proportion
tempfile cal_proportion
save `cal_proportion', replace
restore

collapse (sum) cal nal, by(draw draw2 state species length3 domain2)
gen ql=cal/nal

tempfile ql
save `ql', replace 

*E) compute projected catch-at-length 
* 	1) Pull in the projected population numbers-at-age data
*	2) convert to lengths using the age-length keys from above
*	3) merge to the 2024 selectivities
* 	4) adjust for plus groups necessarily made when computing 2024 selectivities. 
*	5) compute 2026 catch-at-length numbers and probability distribution
		
*1) 
import delimited using "$input_data_cd/length_data/J1_2026Summer_Flounder.csv", clear
gen species="sf"
gen region="all"
duplicates drop 
drop year
sample $ndraws, count
gen draw=_n
tempfile sf
save `sf', replace 

import delimited using "$input_data_cd/length_data/J1_2026Scup.csv", clear
gen species="scup"
gen region="all"
duplicates drop 
drop year
sample $ndraws, count
gen draw=_n
tempfile scup
save `scup', replace 

import delimited using "$input_data_cd/length_data/fit_proj_NAA_NORTH_2026.csv", clear
gen species="bsb"
gen region="north"
duplicates drop 
sample $ndraws, count
replace draw=_n
forv i=0(1)7{
	local v = `i'+1
	rename v`v' a`i'
	replace a`i'=a`i'*1000
}

tempfile bsbN
save `bsbN', replace 

import delimited using "$input_data_cd/length_data/fit_proj_NAA_SOUTH_2026.csv", clear
gen species="bsb"
gen region="south"
duplicates drop 
sample $ndraws, count
replace draw=_n

forv i=0(1)7{
	local v = `i'+1
	rename v`v' a`i'
	replace a`i'=a`i'*1000
	
}
tempfile bsbS
save `bsbS', replace 

append using `bsbN'
append using `scup'
append using `sf'
order species region draw

reshape long a, i(species region draw) j(age) string
destring age, replace
rename a pop_naa

expand 4 if species=="bsb" & region=="north"
bysort draw species region age: gen n=_n 
gen  state="MA" if species=="bsb" & region=="north" & n==1
replace state="RI" if species=="bsb" & region=="north" & n==2
replace state="CT" if species=="bsb" & region=="north" & n==3
replace state="NY" if species=="bsb" & region=="north" & n==4
drop n

expand 5 if species=="bsb" & region=="south"
bysort draw species region age: gen n=_n 
replace  state="NJ" if species=="bsb" & region=="south" & n==1
replace state="DE" if species=="bsb" & region=="south" & n==2
replace state="VA" if species=="bsb" & region=="south" & n==3
replace state="MD" if species=="bsb" & region=="south" & n==4
replace state="NC" if species=="bsb" & region=="south" & n==5
drop n

expand 9 if species=="sf"
bysort draw species region age: gen n=_n 
replace  state="MA" if species=="sf" & n==1
replace state="RI" if species=="sf" & n==2
replace state="CT" if species=="sf" & n==3
replace state="NY" if species=="sf" & n==4
replace state="NC" if species=="sf" & n==5
replace  state="NJ" if species=="sf"& n==6
replace state="DE" if species=="sf" & n==7
replace state="VA" if species=="sf" & n==8
replace state="MD" if species=="sf" & n==9
drop n

expand 9 if species=="scup"
bysort draw species region age: gen n=_n 
replace  state="MA" if species=="scup" & n==1
replace state="RI" if species=="scup" & n==2
replace state="CT" if species=="scup" & n==3
replace state="NY" if species=="scup" & n==4
replace state="NC" if species=="scup" & n==5
replace  state="NJ" if species=="scup"& n==6
replace state="DE" if species=="scup" & n==7
replace state="VA" if species=="scup" & n==8
replace state="MD" if species=="scup" & n==9

*2) 
merge 1:m age state draw species using `age_length'
sort draw state species age length 

gen nal=pop_naa*prop_smoothed

collapse (sum) nal, by(draw species state length)

order draw state species length nal
sort draw state species length nal
rename nal nal_2026
rename length length3 

*3) 
merge 1:1 draw state species length3 using `ql', keep(3) nogen
gen cal_2026=ql*nal_2026

*4) 
merge 1:m domain2 length3 using `cal_proportion'
sort draw state species length
replace cal_2026=cal_2026*cal_proportion
drop if cal_2026==. | cal_2026==0

*5) 
keep draw state species length cal_2026
egen sum_cal=sum(cal_2026), by(draw state species)
gen fitted_prob=cal_2026/sum_cal
drop sum

export delimited using "$iterative_input_data_cd/projected_catch_at_length.csv", replace 


